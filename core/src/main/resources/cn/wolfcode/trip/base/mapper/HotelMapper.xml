<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.trip.base.mapper.HotelMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.trip.base.domain.Hotel">
    <id column="id" property="id" />
    <result column="hotelRegion" property="hotelRegion" />
    <result column="name" property="name" />
    <result column="pic" property="pic" />
    <result column="distance" property="distance" />
    <result column="starLevel" property="starLevel" />
    <result column="price" property="price" />
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from hotel
    where id = #{id}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into hotel (hotelRegion, name, pic, distance, starLevel, price)
    values (#{hotelRegion}, #{name}, #{pic}, #{distance}, #{starLevel}, #{price})
  </insert>
  <update id="updateByPrimaryKey">
    update hotel
    set hotelRegion = #{hotelRegion},
      name = #{name},
      pic = #{pic},
      distance = #{distance},
      starLevel = #{starLevel},
      price = #{price}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, hotelRegion, name, pic, distance, starLevel, price
    from hotel
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, hotelRegion, name, pic, distance, starLevel, price
    from hotel
  </select>
  <select id="selectForList" resultMap="BaseResultMap">
    select id, hotelRegion, name, pic, distance, starLevel, price
    from hotel
    <where>
      <if test="keyword!=null">
        and (hotelRegion like concat('%',#{keyword},'%') or name like concat('%',#{keyword},'%'))
      </if>
    </where>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.trip.base.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.trip.base.domain.Comment">
        <result column="id" jdbcType="INTEGER" property="id" />
        <result column="flagId" property="flagId" />
        <result column="parentId" property="parentId" />
        <result column="comment" jdbcType="VARCHAR" property="comment" />
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="type_id"  property="typeId" />
        <result column="collect" jdbcType="INTEGER" property="collect" />
        <result column="praise" jdbcType="INTEGER" property="praise" />
        <association property="user" javaType="user" columnPrefix="user_">
            <result property="id" column="id"/>
            <result property="nickName" column="nickName"/>
            <result property="headImgUrl" column="headImgUrl"/>
        </association>
    </resultMap>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.wolfcode.trip.base.domain.Comment" useGeneratedKeys="true">
        INSERT INTO comment (parentId, flagId, comment, createTime,
        type, type_id, user_id,
        collect, praise)
        VALUES (#{parentId}, #{flagId}, #{comment}, #{createTime},
        #{type}, #{typeId}, #{user.id},
        #{collect}, #{praise})
    </insert>
    <update id="updateByPrimaryKey" parameterType="comment">
        UPDATE COMMENT SET
        <if test="collect != null">
            collect = #{collect}
        </if>
        <if test="praise != null">
            praise = #{praise}
        </if> WHERE id = #{id}
    </update>

    <!--更新第一次插入评论内容-->
    <update id="updateCommentById" parameterType="comment">
        UPDATE COMMENT SET
        <if test="parentId != null">
            parentId = #{parentId},
        </if>
        <if test="content != null">
            comment = #{comment}
        </if> WHERE id = #{id}
    </update>

    <delete id="deleteByPrimaryKey">
        DELETE FROM COMMENT WHERE id = #{id}
    </delete>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        SELECT
        c.id,
        c.parentId,
        c. COMMENT,
        c.createTime,
        c.type,
        c.type_id,
        c.collect,
        c.praise,
        c.flagId,
        u.id user_id,
        u.nickName user_nickName,
        u.headImgUrl user_headImgUrl
        FROM
        COMMENT c
        LEFT JOIN user u ON c.user_id = u.id WHERE c.id = #{id}
    </select>
    <select id="selectForList" resultMap="BaseResultMap">
        SELECT
        c.id,
        c.parentId,
        c. COMMENT,
        c.createTime,
        c.type,
        c.type_id,
        c.collect,
        c.praise,
        c.flagId,
        u.id user_id,
        u.nickName user_nickName,
        u.headImgUrl user_headImgUrl
        FROM
        COMMENT c
        LEFT JOIN user u ON c.user_id = u.id WHERE c.type_id=#{typeId} AND c.type=#{type}
    </select>

    <select id="selectByTypeIdAndType"  resultMap="BaseResultMap">
        SELECT
        c.id,
        c.parentId,
        c. COMMENT,
        c.createTime,
        c.type,
        c.type_id,
        c.collect,
        c.praise,
        c.flagId,
        u.id user_id,
        u.nickName user_nickName,
        u.headImgUrl user_headImgUrl
        FROM
        COMMENT c
        LEFT JOIN user u ON c.user_id = u.id WHERE c.type_id=#{typeId} AND c.type=#{type}
        <if test="parentId != null">
            AND c.parentId = 0
        </if>
        <if test="parentId == null">
            AND c.parentId IS NULL
        </if>
        <if test="user != null and user.id != null">
            AND c.user_id = #{user.id}
        </if>
    </select>

    <!--获取NODE节点中最大树  防止出现死循环-->
    <select id="selectMaxFlagId" resultType="long" parameterType="comment">
        SELECT max(flagId) FROM  COMMENT WHERE type_id=#{typeId} AND type=#{type}
            <if test="user != null and user.id != null">
                AND user_id = #{user.id}
            </if>
    </select>


    <select id="selectByCollect" resultType="long"  parameterType="comment">
        SELECT  max(flagId) FROM COMMENT WHERE type_id=#{typeId} AND type=#{type} AND collect = #{collect} GROUP BY collect
    </select>
</mapper>